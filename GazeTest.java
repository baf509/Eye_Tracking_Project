/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package EyeTracking;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.geom.Ellipse2D;
import java.util.ArrayList;
import java.util.Arrays;
import javax.swing.Timer;

/**
 *
 * @author XXX
 */
public class GazeTest extends javax.swing.JPanel implements ActionListener {

    Timer tm = new Timer(50, this);
    private int gazeX;
    private int gazeY;
    private int[] vecXArray = new int[8];
    private int[] vecYArray = new int[8];
    private int licznik = 0;
    private int x;
    private int y;
    private int tmpX;
    private int tmpY;
    private boolean SHOW_RESULTS = false;

    public void setSHOW_RESULTS(boolean SHOW_RESULTS) {
        this.SHOW_RESULTS = SHOW_RESULTS;
    }

    public int getTmpX() {
        return tmpX;
    }

    public int getTmpY() {
        return tmpY;
    }

    public GazeTest() {
        System.out.println("Start gaze test");
        for (int i = 0; i < 8; i++) {
            vecXArray[i] = 0;
        }
    }

    public int getGazeX() {
        return gazeX;
    }

    public void setGazeX(int gazeX) {
        this.gazeX = gazeX;
    }

    public int getGazeY() {
        return gazeY;
    }

    public void setGazeY(int gazeY) {
        this.gazeY = gazeY;
    }

    @Override
    public void actionPerformed(ActionEvent e) {

//       
//        gazeX++;
//        gazeY++;
//        
        x = gazeX;
        y = gazeY;
        repaint();

    }

    /**
     * Creates new form GazeTest
     */
//    public GazeTest() {
//        initComponents();
//        Toolkit screenSize = Toolkit.getDefaultToolkit();
//        Dimension scrSize = screenSize.getScreenSize();
//        double width = scrSize.getWidth();
//        double height = scrSize.getHeight();
//
//    }
    private Ellipse2D getEllipseFromCenter(double x, double y, double width, double height) {
        double newX = x - width / 2.0;
        double newY = y - height / 2.0;

        Ellipse2D ellipse = new Ellipse2D.Double(newX, newY, width, height);

        return ellipse;
    }

    public void paint(Graphics g) {


        licznik++;
        if (licznik == 8) {
            licznik = 0;
        }
        vecXArray[licznik] = x;
        vecYArray[licznik] = y;
//         Arrays.sort(vecXArray);
//        Arrays.sort(vecYArray);

        tmpX = vecXArray[0] + vecXArray[1] + vecXArray[2] + vecXArray[3] + vecXArray[4] + vecXArray[5] + vecXArray[6] + vecXArray[7];//+vecXArray[8]+vecXArray[9]+vecXArray[10]+vecXArray[11];
        tmpY = vecYArray[0] + vecYArray[1] + vecYArray[2] + vecYArray[3] + vecYArray[4] + vecYArray[5] + vecYArray[6] + vecYArray[7];//+vecYArray[8]+vecYArray[9]+vecYArray[10]+vecYArray[11];


        tmpX = tmpX / 8;
        tmpY = tmpY / 8;


        System.out.println("                        Licznik: " + licznik);

        Graphics2D g2 = (Graphics2D) g;
        super.paintComponent(g2);
        g2.setColor(Color.red);
        System.out.println("Rysuje");
        System.out.println("współrzdne :" + x + " " + y);
//       g2.fill(getEllipseFromCenter(x, y, 10, 10));
        g2.fill(getEllipseFromCenter(tmpX, tmpY, 10, 10));
        g2.setColor(Color.black);
        g2.draw(getEllipseFromCenter(x, y, 10, 10));
        tm.start();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
